SHELL       = /bin/ksh

include       $(ESMFMKFILE)
ESMF_INC    = $(ESMF_F90COMPILEPATHS)
ESMF_LIB   =  $(ESMF_F90LINKPATHS) $(ESMF_F90LINKRPATHS) $(ESMF_F90ESMFLINKLIBS)
## ESMF_LIB    = -L /gpfs/hps/emc/global/noscrub/Shrinivas.Moorthi/ESMF_7_0_0/lib -lesmf
MALLOC_LIB = /u/James.A.Abeles/gperftools-2.2.1/lib/libtcmalloc_minimal.a
#MPI_LIB =  /u/James.A.Abeles/mpitrace/lib/libmpitrace.a
#MEM =  /u/James.A.Abeles/print_memory.o
STDC_LIB= -lstdc++

gfs=gsm
gfsdir=atmos/$(gfs)
###################### PHYS_MODE ##### CHEM_MODE ###############################
#	E.Mirvis 8/15/16
#      prebld options work fine on WCOSS ph I & II 
#      but not yet on Crays yet - under development, however with default options 
#      "compile" it should work on Crays as before
#
#
PHYS_MODE       =compile
CHEM_MODE       =compile
ifeq ($(PHYS_MODE),compile)
       PHYS_LIB = $(TOP)/atmos/gsm/gsmphys
       PHYS_INC = $(TOP)/atmos/gsm/gsmphys
       PHYS_DIR = $(TOP)/atmos/gsm/gsmphys
endif
ifeq ($(CHEM_MODE),compile)
        CHEM_LIB = $(TOP)/chem
        CHEM_INC = $(TOP)/chem/gocart/src/Config/
        CHEM_DIR = $(TOP)/chem
       CHEM_MOD = $(TOP)/chem/gocart/${ARCH}/include
      ESMADIR = chem/gocart
endif
#
################################################################################

#jw NETCDF_LIB  = /usrx/local/NetCDF/4.2/serial/lib/libnetcdff.a /usrx/local/NetCDF/4.2/serial/lib/libnetcdf.a /usrx/local/HDF5/1.8.9/serial/lib/libhdf5_hl.a /usrx/local/HDF5/1.8.9/serial/lib/libhdf5.a /usrx/local/zlib-1.2.7/lib/libz.a
NETCDF_LIB  = -L${NETCDF}/lib -lnetcdff -lnetcdf ${HDF5_LDFLAGS} ${Z_LIB}

W3_LIB      = $(W3NCO_LIBd) $(W3EMC_LIBd)
SP_LIB      = $(SP_LIBd)
SIGIO_LIB   = $(SIGIO_LIB4)
SFCIO_LIB   = $(SFCIO_LIB4)
BACIO_LIB  = $(BACIO_LIB4)
SYS_LIB     =


EXTLIBS     = $(MEM)         \
	      $(MKL)         \
	      $(NEMSIO_LIB)  \
              $(W3_LIB)      \
              $(BACIO_LIB)   \
              $(SP_LIB)      \
              $(ESMF_LIB)    \
              $(NETCDF_LIB)  \
 	      $(MALLOC_LIB)  \
 	      $(MPI_LIB)     \
	      $(STDC_LIB) 


#POSTDIR     = /gpfs/hps/emc/global/noscrub/Shrinivas.Moorthi/post_dir/sorc/ncep_post.fd
POSTMOD     = ${POSTDIR}/incmod/post_4
POST_INC    = -I${POSTDIR}/incmod/post_4
POST_LIB    = -L${POSTDIR} -lnceppost
W3_POST_LIB = $(W3NCO_LIB4) $(W3EMC_LIB4)
G2_LIB      = ${G2TMPL_LIB} ${G2_LIB4} ${JASPER_LIB} ${PNG_LIB} ${Z_LIB}
XML_LIB     = ${XMLPARSE_LIB}
SIGIO_LIB   = ${SIGIO_LIB4}
SFCIO_LIB   = ${SFCIO_LIB4}

EXTLIBS_POST = $(POST_LIB)    \
               $(NEMSIO_LIB)  \
               $(W3_POST_LIB) \
               $(XML_LIB)     \
               $(G2_LIB)      \
               $(BACIO_LIB)   \
               $(SIGIO_LIB)   \
               $(SFCIO_LIB)   \
               $(SP_LIB)      \
               $(CRTM_LIB)    \
               $(ESMF_LIB)    \
               $(NETCDF_LIB) 

#FC          = ftn -g -homp -mkl=sequential -align -lmkl_intel_lp64 -lmkl_core -lmkl_sequential -lpthread -lm
#FC          = ftn -g -openmp -mkl=sequential -align -lmkl_intel_lp64 -lmkl_core -lmkl_sequential -lpthread -lm
#FC          = ftn -g -openmp -lpthread -lm
FC          = ftn -g -openmp -lpthread
FPP         = -fpp
FREE        = -free
FIXED       = -fixed
R8          = -r8
MKL         = -mkl

FINCS       = -I$(ESMF_MOD) -I$(NEMSIO_INC) $(NETCDF_INCLUDE)
TRAPS       =
#TRAPS       = -ftrapuv -check all -fp-stack-check
#TRAPS       = -ftrapuv -check bounds -check format -check output_conversion -check pointers -check uninit -fp-stack-check

#FFLAGS      = $(TRAPS) $(FINCS) -convert big_endian -assume byterecl -fp-model source -xCORE-AVX2 -openmp $(MKL)
 FFLAGS      = $(TRAPS) $(FINCS) -convert big_endian -assume byterecl -fp-model precise -ftz -fast-transcendentals -no-prec-div -no-prec-sqrt -align array64byte -assume buffered_stdout -fpp -mkl -xCORE-AVX2

 OPTS_NMM    = -O2
 OPTS_GFS    = -O3 -traceback
#OPTS_GFS    = -O2
#OPTS_GFS    = -O3
OPTS_GEN     = -O2
OPTS_FIM     = -O2

FFLAGS_NMM   = $(OPTS_NMM) $(FFLAGS)
FFLAGS_GFS   = $(OPTS_GFS) $(FFLAGS) $(FREE) $(MKL)
#LDFLAGS_GFS = $(MKL)
 LDFLAGS_GFS = -dynamic
#LDFLAGS_GFS = -dynamic $(MKL)
#LDFLAGS_MAP = -Wl,--print-map
 FFLAGS_GFSF = $(OPTS_GFS) $(FFLAGS) $(FIXED)
 FFLAGS_GEN  = $(OPTS_GEN) $(FFLAGS)
 FFLAGS_FIM  = $(OPTS_FIM) $(FFLAGS)

CPP         = /lib/cpp -P -traditional
CPPFLAGS    = -DENABLE_SMP -DCHNK_RRTM=8 -DNEMS_GSM

AR          = ar
ARFLAGS     = -r

RM          = rm
